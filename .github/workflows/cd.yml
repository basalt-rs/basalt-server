permissions:
    contents: read
    packages: write

on:
    workflow_dispatch:
    push:
        tags:
            - "v[0-9]+.[0-9]+.[0-9]+.?*"

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

name: delivery

jobs:
    get-version:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.extract.outputs.version }}
        steps:
            - name: Extract version from ref
              id: extract
              run: |
                  VERSION="${GITHUB_REF_NAME#v}"
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

    build:
        needs: get-version
        strategy:
            matrix:
                variant:
                    - dockerfile: Dockerfile
                      name: latest
                    - dockerfile: scripting.Dockerfile
                      name: latest-scripting
                    - dockerfile: webhooks.Dockerfile
                      name: latest-webhooks
                    - dockerfile: minimal.Dockerfile
                      name: latest-minimal
                arch: [amd64, arm64]
        runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm64' }}
        env:
            VERSION: ${{ needs.get-version.outputs.version }}
        steps:
            - uses: actions/checkout@v4

            - name: Compute tags
              id: tags
              run: |
                  CLEAN_VERSION="${VERSION#v}"
                  MAJOR=$(echo "$CLEAN_VERSION" | cut -d. -f1)
                  MINOR=$(echo "$CLEAN_VERSION" | cut -d. -f2)
                  MAJOR_MINOR="$MAJOR.$MINOR"

                  BASE_TAG="${{ matrix.variant.name }}"
                  TAGS="$BASE_TAG,$BASE_TAG-$CLEAN_VERSION,$BASE_TAG-$MAJOR_MINOR,$BASE_TAG-$MAJOR"

                  # drop latest if prerelease
                  if [[ "$CLEAN_VERSION" =~ -(rc|alpha|beta) ]]; then
                    TAGS=$(echo "$TAGS" | tr ',' '\n' | grep -v 'latest' | paste -sd "," -)
                  fi

                  # prepend GHCR namespace
                  TAGS=$(echo "$TAGS" | tr ',' '\n' | sed "s|^|ghcr.io/${{ github.repository_owner }}/basalt-server-test:|")
                  TAGS=$(echo "$TAGS" | paste -sd "," -)
                  echo "tags=$TAGS" >> $GITHUB_OUTPUT

            - name: Show computed tags
              run: |
                  echo "Computed tags for inspection:"
                  echo "${{ steps.tags.outputs.tags }}" | tr ',' '\n'

            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build & push ${{ matrix.variant.name }} (${{ matrix.arch }})
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./containers/${{ matrix.variant.dockerfile }}
                  platforms: ${{ matrix.arch == 'amd64' && 'linux/amd64' || 'linux/arm64' }}
                  push: true
                  tags: ${{ steps.tags.outputs.tags }}-${{ matrix.arch }}

    manifest:
        needs: build
        runs-on: ubuntu-24.04
        strategy:
            matrix:
                variant:
                    [latest, latest-scripting, latest-webhooks, latest-minimal]
        steps:
            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Create and push multi-arch manifest for ${{ matrix.variant }}
              run: |
                  docker buildx imagetools create \
                    -t ghcr.io/${{ github.repository_owner }}/basalt-server-test:${{ matrix.variant }} \
                    ghcr.io/${{ github.repository_owner }}/basalt-server-test:${{ matrix.variant }}-amd64 \
                    ghcr.io/${{ github.repository_owner }}/basalt-server-test:${{ matrix.variant }}-arm64
