permissions:
    contents: read
on:
    workflow_dispatch:
    push:
        tags:
            - "v[0-9]+.[0-9]+.[0-9]+.?*"
concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true
name: delivery
jobs:
    get-version:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.extract.outputs.version }}
        steps:
            - name: Extract version from ref
              id: extract
              run: |
                  VERSION="${GITHUB_REF_NAME#v}"
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

    push-containers:
        runs-on: blacksmith-4vcpu-ubuntu-2404
        needs: [get-version]
        permissions:
            contents: read
            packages: write
        strategy:
            matrix:
                include:
                    - dockerfile: Dockerfile
                      tags:
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:latest
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:__VERSION__
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:latest-full
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:__VERSION__-full
                    - dockerfile: scripting.Dockerfile
                      tags:
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:latest-scripting
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:__VERSION__-scripting
                    - dockerfile: webhooks.Dockerfile
                      tags:
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:latest-webhooks
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:__VERSION__-webhooks
                    - dockerfile: minimal.Dockerfile
                      tags:
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:latest-minimal
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:__VERSION__-minimal
        env:
            VERSION: ${{ needs.get-version.outputs.version }}
        steps:
            - uses: actions/checkout@v4

            - name: Replace version in tags
              id: tags
              run: |
                  VERSION="${{ needs.get-version.outputs.version }}"
                  CLEAN_VERSION="${VERSION#v}"

                  MAJOR=$(echo "$CLEAN_VERSION" | cut -d. -f1)
                  MINOR=$(echo "$CLEAN_VERSION" | cut -d. -f2)
                  PATCH=$(echo "$CLEAN_VERSION" | cut -d. -f3)

                  MAJOR_MINOR="$MAJOR.$MINOR"

                  TAGS_JSON=$(jq -nc --argjson tags "$(jq -c '.tags' <<< '${{ toJson(matrix) }}')" '$tags')
                  TAGS=$(echo "$TAGS_JSON" | jq -r '.[]' | sed "s/__VERSION__/$CLEAN_VERSION/g")

                  # Add major.minor and major tags for every versioned tag
                  EXTRA_TAGS=""
                  for t in $TAGS; do
                    if [[ "$t" == *"$CLEAN_VERSION"* ]]; then
                      EXTRA_TAGS+=" $(echo "$t" | sed "s/$CLEAN_VERSION/$MAJOR_MINOR/")"
                      EXTRA_TAGS+=" $(echo "$t" | sed "s/$CLEAN_VERSION/$MAJOR/")"
                    fi
                  done
                  TAGS="$TAGS $EXTRA_TAGS"

                  # Drop latest if prerelease
                  if [[ "$CLEAN_VERSION" =~ -(rc|alpha|beta) ]]; then
                    TAGS=$(echo "$TAGS" | tr ' ' '\n' | grep -v ':latest' || true)
                  fi

                  TAGS=$(echo "$TAGS" | tr ' ' '\n' | paste -sd "," -)
                  echo "tags=$TAGS" >> $GITHUB_OUTPUT

            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./containers/${{ matrix.dockerfile }}
                  platforms: linux/amd64,linux/arm64
                  push: true
                  tags: ${{ steps.tags.outputs.tags }}
