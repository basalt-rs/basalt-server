permissions:
    contents: read
on:
    push:
        branches: [main]
concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true
name: publish main images
jobs:
    push-containers:
        runs-on: blacksmith-4vcpu-ubuntu-2404
        permissions:
            contents: read
            packages: write
        strategy:
            matrix:
                include:
                    - dockerfile: Dockerfile
                      tags:
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:main
                          - ghcr.io/${{ github.repository_owner }}/basalt-server:main-full
                    # - dockerfile: scripting.Dockerfile
                    # tags:
                    # - ghcr.io/${{ github.repository_owner }}/basalt-server:main-scripting
                    # - dockerfile: webhooks.Dockerfile
                    # tags:
                    # - ghcr.io/${{ github.repository_owner }}/basalt-server:main-webhooks
                    # - dockerfile: minimal.Dockerfile
                    # tags:
                    # - ghcr.io/${{ github.repository_owner }}/basalt-server:main-minimal
        steps:
            - uses: actions/checkout@v4
            - name: Collect tags
              id: tags
              run: |
                  TAGS=$(jq -r '.tags[]' <<< '${{ toJson(matrix) }}' | paste -sd "," -)
                  echo "tags=$TAGS" >> $GITHUB_OUTPUT
            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            # Use QEMU to build images for both amd64 and arm64
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./containers/${{ matrix.dockerfile }}
                  platforms: linux/amd64
                  push: true
                  tags: ${{ steps.tags.outputs.tags }}
