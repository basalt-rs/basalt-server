openapi: 3.1.0
info:
  title: basalt-server
  description: ''
  license:
    name: ''
  version: 0.1.0
paths:
  /auth/login:
    post:
      tags:
      - auth
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Session cookie has been set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Incorrect credentials provided
  /auth/logout:
    post:
      tags:
      - auth
      operationId: logout
      responses:
        '200':
          description: User has been logged out
        '401':
          description: User was not logged in
  /auth/me:
    get:
      tags:
      - auth
      description: Get information about the current user
      operationId: me
      responses:
        '200':
          description: User is signed in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Auth token is expired
  /clock:
    get:
      tags:
      - clock
      operationId: get_clock
      responses:
        '200':
          description: Information about the clock
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockStatusResponse'
    patch:
      tags:
      - clock
      operationId: patch_clock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClockRequest'
        required: true
      responses:
        '200':
          description: Game is paused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClockStatusResponse'
        '401':
          description: Insufficient permissions
  /competition/packet:
    get:
      tags:
      - competition
      operationId: download_packet
      responses:
        '200':
          description: ''
          content:
            application/pdf:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
                  minimum: 0
  /questions:
    get:
      tags:
      - questions
      operationId: get_all
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionResponse'
  /questions/{id}:
    get:
      tags:
      - questions
      operationId: get_specific_question
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'
        '404':
          description: Question Not Found
  /testing/state:
    get:
      tags:
      - testing
      description: Get the current state of the current user's submissions
      operationId: get_submissions_state
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionSubmissionState'
        '403':
          description: User does not have permission to view the submissions for this user
  /testing/submissions:
    get:
      tags:
      - testing
      operationId: get_submissions
      parameters:
      - name: username
        in: path
        required: true
        schema:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/Username'
      - name: question_index
        in: path
        required: true
        schema:
          type: integer
          minimum: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubmissionHistory'
        '403':
          description: User does not have permission to view the submissions for this user
  /ws:
    get:
      tags:
      - ws
      operationId: connect_websocket
      responses:
        '200':
          description: connected to websocket
components:
  schemas:
    ClockStatusResponse:
      type: object
      required:
      - is_paused
      - time_left_in_seconds
      properties:
        is_paused:
          type: boolean
        time_left_in_seconds:
          type: integer
          format: int64
          minimum: 0
    LanguageSyntax:
      type: object
      required:
      - name
      - syntax
      properties:
        name:
          type: string
        syntax:
          type: string
    LoginRequest:
      type: object
      required:
      - username
      - password
      properties:
        password:
          type: string
        username:
          type: string
    LoginResponse:
      type: object
      required:
      - token
      - role
      properties:
        role:
          $ref: '#/components/schemas/Role'
        token:
          type: string
    QuestionResponse:
      type: object
      required:
      - languages
      - title
      - tests
      properties:
        description:
          type:
          - string
          - 'null'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageSyntax'
        points:
          type:
          - integer
          - 'null'
          format: int32
        tests:
          type: array
          items:
            $ref: '#/components/schemas/TestResponse'
        title:
          type: string
    QuestionState:
      type: string
      enum:
      - pass
      - fail
      - in-progress
      - not-attempted
    QuestionSubmissionState:
      type: object
      required:
      - state
      properties:
        remainingAttempts:
          type:
          - integer
          - 'null'
          format: int32
          minimum: 0
        state:
          $ref: '#/components/schemas/QuestionState'
    Role:
      type: string
      enum:
      - competitor
      - host
    SubmissionHistory:
      type: object
      required:
      - id
      - submitter
      - time
      - compile_fail
      - code
      - question_index
      - score
      - success
      properties:
        code:
          type: string
        compile_fail:
          type: boolean
        id:
          $ref: '#/components/schemas/SubmissionId'
        question_index:
          type: integer
          format: int64
        score:
          type: number
          format: double
        submitter:
          $ref: '#/components/schemas/Username'
        success:
          type: boolean
        time:
          type: string
          format: date
    SubmissionId:
      type: string
    TestResponse:
      type: object
      required:
      - input
      - output
      - visible
      properties:
        input:
          type: string
        output:
          type: string
        visible:
          type: boolean
    UpdateClockRequest:
      oneOf:
      - type: object
        required:
        - is_paused
        properties:
          is_paused:
            type: boolean
    User:
      type: object
      required:
      - username
      - role
      properties:
        role:
          $ref: '#/components/schemas/Role'
        username:
          $ref: '#/components/schemas/Username'
    Username:
      type: string
